<!DOCTYPE html>
<!--[if IE 7]>
<html class="ie ie7" lang="en-US">
<![endif]-->
<!--[if IE 8]>
<html class="ie ie8" lang="en-US">
<![endif]-->
<!--[if !(IE 7) | !(IE 8)  ]><!-->
<html lang="en-US">
<!--<![endif]-->
<head>

<meta charset="UTF-8">



<title>My blog | Just another WordPress site</title>
<meta name="viewport" content="width = device-width, initial-scale = .6">
<meta name="google-site-verification" content="3-Q1wDSqkgbxnDwN7MY_tHNlqMyqF6rM2Xz36er2dSU" />
<!--
<link rel="stylesheet" type="text/css" media="all" href="" />
-->
<link rel="stylesheet" type="text/css" media="all" href="http://media.1button.org/css/prettify.css" />
<!-- provide a class for hiding content and showing it gracefully if js is on -->
<style type="text/css">.showGracefully{display:none}</style>
<noscript><style type="text/css">.showGracefully{display:block}</style></noscript>
<link rel="profile" href="http://gmpg.org/xfn/11">
<link rel="pingback" href="http://a-laughlin.com/xmlrpc.php">


<!-- provide a class for hiding content and showing it gracefully if js is on -->
<style type="text/css">.showGracefully{display:none}</style>
<noscript><style type="text/css">.showGracefully{display:block}</style></noscript>





<!--[if lt IE 9]>
<script src="http://a-laughlin.com/wp-content/themes/adam-custom/js/html5.js"></script>
<![endif]-->


<meta name='robots' content='noindex,nofollow' />
<link rel="alternate" type="application/rss+xml" title="My blog &raquo; Feed" href="http://a-laughlin.com/?feed=rss2" />
<link rel="alternate" type="application/rss+xml" title="My blog &raquo; Comments Feed" href="http://a-laughlin.com/?feed=comments-rss2" />
<link rel='stylesheet' id='admin-bar-css'  href='http://a-laughlin.com/wp-includes/css/admin-bar.min.css?ver=3.6' type='text/css' media='all' />
<link rel='stylesheet' id='twentythirteen-fonts-css'  href='//fonts.googleapis.com/css?family=Source+Sans+Pro%3A300%2C400%2C700%2C300italic%2C400italic%2C700italic%7CBitter%3A400%2C700&#038;subset=latin%2Clatin-ext' type='text/css' media='all' />
<link rel='stylesheet' id='genericons-css'  href='http://a-laughlin.com/wp-content/themes/adam-custom/fonts/genericons.css?ver=2.09' type='text/css' media='all' />
<link rel='stylesheet' id='twentythirteen-style-css'  href='http://a-laughlin.com/wp-content/themes/adam-custom/style.css?ver=2013-07-18' type='text/css' media='all' />
<!--[if lt IE 9]>
<link rel='stylesheet' id='twentythirteen-ie-css'  href='http://a-laughlin.com/wp-content/themes/adam-custom/css/ie.css?ver=2013-07-18' type='text/css' media='all' />
<![endif]-->
<script type='text/javascript' src='http://ajax.googleapis.com/ajax/libs/jquery/1.7.0/jquery.min.js'></script>
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://a-laughlin.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://a-laughlin.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 3.6" />
	<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>
	<style type="text/css" id="twentythirteen-header-css">
			.site-header {
			background: url(http://a-laughlin.com/wp-content/themes/adam-custom/images/headers/circle.png) no-repeat scroll top;
			background-size: 1600px auto;
		}
		</style>
	<style type="text/css" media="print">#wpadminbar { display:none; }</style>
<style type="text/css" media="screen">
	html { margin-top: 28px !important; }
	* html body { margin-top: 28px !important; }
</style>


<script type="text/javascript">
//params for use in pre and post ToC plugins
(function(){
	// define configuration objects for preload functions

	var s = window.shoestring = {initial:['//static.1button.org/js/a-laughlin.com.toc.js']};
	/*** Shoestring Preload Extensions ***/
	// define preload functions to extend shoestring's functionality across domains
	s.preInitPlugins={
		ssp_converters:function(d){d.strToObj=function(c,b,g){for(var e={},a=b||"&",b=a.substr?"split":"match",c=c[b](a),a=0,f,d=c.length;a<d;a++)f=c[a][b](g||"="),e[f[0]]=f[1]||"";return e};d.objToStr=function(c,b,d){var e="";$.each(c,function(a){e+=a+(d||"")+c[a]+(b||"")});return b?e.slice(0,-b.length):e}},
		ssp_utilsPack:function(d){var e=location;window.console||(console={debug:function(){}});d.AinB=function(a,b,c){if(a&&b)if(b.indexOf)c=b.join&&!a.test?b[b.indexOf(a)]===a:a.test?a.test(b):b.substr(b.indexOf(a),a.length)===a;else if(b.join)for(var d=b.length;d--;)if(a.test?a.test(b[d]):b[d]===a){c=!c;break}return!!c};d.extendHrefProps=function(a,b){if(a){var b=b||{},a=a.href?a:$('<a href="'+a+'">')[0],c;for(c in e)typeof a[c]=="string"&&(b[c]=a[c]);return b}};d.extendHrefProps(e,d)},
		ssp_cookie:function (b){var d=document,g=location,c=b.cookie=b.strToObj(d.cookie,"; ","=");b.getDomain=function(a){return a&&a.hostname?a.hostname.split(".").slice(-2).join("."):""};c.write=function(a,e,f){d.cookie=a+"="+(c[a]=e)+(f?";expires="+f:"")+";domain=."+b.domain+";path=/";return e};c.read=function(a){return c[a]||""};b.domain=b.getDomain(g)},
		ssp_virtualDevServer:function (b){if(b.cookie.devEnv)b.initial=b.cookie.devEnv.split(",")},
		ssp_ga_gwo:function (b){utmx=function(){};utmxx=function(){};_gaq=[];var c,l=document,d=b.ga_gwo,a=d.accountSettings=[],f=d.relatedHostnames,g=f.length,h=location,m=h.pathname,e=d.gwo={},i=b.cookie,j=e.encounteredTests={},k=0;e.file="";b.storeTestInfo=function(){var a=utmx_global_vd,c=e.activeSections||{},d,g=e.activeTestName,f=j[g];f.versionTest=a["A/B"]?a["A/B"].contents:h.href;$.each(a,function(a,b){d=b.index;c[a]=a=="A/B"?"version_"+"abcdefghijkl"[d]:c[a].split(",")[d]});f.versionStr=b.objToStr(c, "&",".");i.write(g,b.objToStr(f,"**","*"));a["A/B"]&&(d&&i.write("ss_trueReferrer",l.referrer),utmx("url","A/B"))};if(g>0){a[0]=["_setDomainName",_udn="."+b.domain];a[1]=["_setAllowLinker",!!(_ulink="1")];for(a[2]=["_setAllowHash",!(_uhash="off")];--g;)c=f[g].slice(f[g].indexOf("/")),m.indexOf(c)||a.push(["_setCookiePath",_utcp=c.slice(1).join("/")])}i.ss_trueReferrer&&(a.push(["_setReferrerOverride",i.ss_trueReferrer]),i.write("ss_trueReferrer",""));for(;d.tests&&k<d.tests.length;k++)if(a=d.tests[k], c=a[0],b.cookie[c]&&(j[c]=b.strToObj(b.cookie[c],"**","*")),h.href.indexOf(a[2])>-1)return e.activeTestObj=j[c]={key:a[1],goalTest:a[3]},e.activeTestName=c,e.activeSections=a[4]||"",e.file="http"+(b.protocol=="https:"?"s://ssl":"://www")+".google-analytics.com/siteopt.js?v=1&utmxkey="+a[1]+"&utmx="+b.cookie.read("__utmx")+"&utmxx="+b.cookie.read("__utmxx")+("&utmxtime="+(new Date).valueOf())+(h.hash?"&utmxhash="+escape(h.hash.substr(1)):""),b.initial.push(e.file),{files:[{url:e.file,dataType:"script", async:!1,cache:!0}],fn:"storeTestInfo"}}
	};

	/*** Extension Config Objects***/
	s.ga_gwo={
		relatedHostnames:[
	    'a-laughlin.com',
	    '1button.org'
	  ],
	  profiles:{
	  	main:['UA-21944901-1']
//	  	gwo:['UA-21944901-2'],
//	  	gwoFullData:['UA-21944901-3']
	  },
//	  tests:[
//	    ['ab_1','3548244761', '/ab_test_version_a/', '/ab_test_goal_page/'],
//	    ['multi_1','0766030754', '/multi_test_page/', '/multi_test_goal_page/',{section1:'original,blue,red',section2:'original,green',section3:'original,purple'}]
//	  ],
		downloadFileTypes:/\.(xlsx?|docx?|pptx?|js|css|kml|kmz|xml|jsonp?|pdf|txt|csv|zip|wmv|exe|swf|mp[34]|m4[va]|ogg)$/i,
		debugQueue:[],
		customVars:{ //  stores all the variables that persist across pages.
			ss_hasclicked:{ // define a custom variable.  This will be its' cookie name.  Storing them separately allows for longer strings (like a multi-touch attribution cookie)
				gaSlot:1, // slot it will be stored in
				gaName:'linktypes', // the name it will show up with in GA
				gaScope:'visitor', // scope  -  I created a lookup table so remembering what 1 vs. 2 vs. 3 are is unnecessary 
				expires:new Date((new Date).getTime()+ 9e11).toGMTString(), // random expiration
				update:function(arg,control){
					if(arg.linkType=='download'||arg.linkType=='related'){ // if eventCategory is a goal step combo, and goal is not 'N'
						var types = this.val ? s.strToObj(this.val,'|','.') : {};
						types[arg.linkType]=(parseInt(types[arg.linkType])||0)+1;
						this.val=s.objToStr(types,'|','.');
					}
				}
			},
			ss_multiTouch:{ // multi touch attribution 
				gaSlot:1, // slot it will be stored in
				gaName:'multiTouch', // the name it will show up with in GA
				gaScope:'visitor', // scope
				expires:new Date((new Date).getTime()+ 9e11).toGMTString(), // some expiration date way out there.  setting it to '' would be session;
				update:function(arg,control){
					if(arg.type=='init'&&s.cookie.ss_gaPageLoads=='1'){ // if we're on the first page of a visit
						this.val += (s.ref.hostname||'n')+'_';
					}
				}
			}
		}
	};
})();


/*!
 * Shoestring JavaScript Structure v0.3
 * Copyright 2011, Adam Laughlin
 * http://a-laughlin.com
 * Licensed under MIT & GPL version 2
 * http://static.a-laughlin.com/mit_license.txt
 * http://static.a-laughlin.com/gpl_license.txt
 */
(function(g){var j=window,a=j.shoestring||{},j={pageTarget:location.href,fnContexts:[a,j],preInitPlugins:{},initial:["js/"+location.hostname+".toc.js"],urls:{},entryDefaults:{is:"body",bind:"live"}},k;for(k in j)a[k]=a[k]||j[k];g.extend(a,{version:"0.3",files:{},toc:[],preInitEntries:[],initToc:function(c){function j(b){function c(l){for(var f=0;f<l.entries.length;f++)for(var d=l.entries[f],e=d.files.length,h=0;h<e;h++)l.url==d.files[h].url&&(d.files[h]=l,d.fl++),d.fl===e&&(b.id?a.entryIds[b.id]= g.extend(b,{selfExec:n}):n(d))}function e(b){if(!b.req)b.req=1,b.success=function(a,d){b.returnedData=a||d;c(b)},g.ajax(b)}for(var d=b.fl=0;d<b.files.length;d++){var f=b.files[d],f=f.url?f:{url:f,dataType:"script",cache:true},h=f.url.replace(/.*\/([^?]+).*/,"$1").replace(/min|[^\w\d]/g,""),h=a.files[h]=a.files[h]||g.extend({entries:[],fileKey:h},f);b.files[d]=f;h.entries.push(b);h.returnedData?c(h):e(h)}}function n(b){b.fn&&(b.bind=="live"&&!g.isReady?k(b):g(function(){k(b)}))}function k(b){var a= g(b.is);b.on?a[b.bind](b.on,b,function(a){b.eventObj=a;p(g(this),b)}):p(a,b)}function p(b,c){function e(d,f){b[d]?b=b[d].apply(b,d.indexOf("ss_")===0?[f,c]:[f]):g.each(a.fnContexts,function(b,a){if(a[d])a[d](f)})}typeof c.fn=="string"?e(c.fn):g.each(c.fn,function(b,a){e(b,a)})}for(var i=0,e=c.length,m=[];i<e;i++){var o=c[i].page,q=a.pageTarget;(o.substr?q.indexOf(o)>-1:o.test(q))&&m.push.apply(m,c[i].entries)}i=0;for(c=m.length;i<c;i++)if(e=m[i],e.when||!("when"in e))e=g.extend({},a.entryDefaults, e),e.files?j(e):n(e)},pluginFactory:function(a){g.each(a,function(a,c){g.fn[a]=function(){var a=arguments;return this.each(function(){c.apply(this,a)})}})},dequeueToc:function(c){for(;c[0];)a.initToc(c.shift()(a))}});g.each(a.preInitPlugins,function(){var c=this(a);c&&a.preInitEntries.push(c)});a.preInitEntries.push({files:a.initial,fn:{dequeueToc:a.toc}});a.initToc([{page:/./,entries:a.preInitEntries}])})(jQuery);
</script>


</head>

<body class="home blog logged-in admin-bar no-customize-support single-author">
	<div id="page" class="hfeed site">
		<header id="masthead" class="site-header" role="banner">
			<a class="home-link" href="http://a-laughlin.com/" title="My blog" rel="home">
				<h1 class="site-title">My blog</h1>
				<h2 class="site-description">Just another WordPress site</h2>
			</a>

			<div id="navbar" class="navbar">
				<nav id="site-navigation" class="navigation main-navigation" role="navigation">
					<h3 class="menu-toggle">Menu</h3>
					<a class="screen-reader-text skip-link" href="#content" title="Skip to content">Skip to content</a>
					<div class="nav-menu"><ul><li class="page_item page-item-16"><a href="http://a-laughlin.com/?page_id=16">About</a></li><li class="page_item page-item-235"><a href="http://a-laughlin.com/?page_id=235">ab_test_goal_page</a></li><li class="page_item page-item-237"><a href="http://a-laughlin.com/?page_id=237">ab_test_version_a</a></li><li class="page_item page-item-249"><a href="http://a-laughlin.com/?page_id=249">ab_test_version_b</a></li><li class="page_item page-item-254"><a href="http://a-laughlin.com/?page_id=254">ab_test_version_c</a></li><li class="page_item page-item-48"><a href="http://a-laughlin.com/?page_id=48">Contact</a></li><li class="page_item page-item-283"><a href="http://a-laughlin.com/?page_id=283">Custom Google Analytics &#038; Google Website Optimizer Implementation Made (even) Easy(ier!)</a></li><li class="page_item page-item-245"><a href="http://a-laughlin.com/?page_id=245">dual_ab_and_multi_goal_page</a></li><li class="page_item page-item-240"><a href="http://a-laughlin.com/?page_id=240">multi_test_goal_page</a></li><li class="page_item page-item-243"><a href="http://a-laughlin.com/?page_id=243">multi_test_page</a></li><li class="page_item page-item-308"><a href="http://a-laughlin.com/?page_id=308">Santa-Fe Institute Video Enlarger</a></li><li class="page_item page-item-291"><a href="http://a-laughlin.com/?page_id=291">Transaction Test Page</a></li></ul></div>
					<form role="search" method="get" class="search-form" action="http://a-laughlin.com/">
				<label>
					<span class="screen-reader-text">Search for:</span>
					<input type="search" class="search-field" placeholder="Search &hellip;" value="" name="s" title="Search for:" />
				</label>
				<input type="submit" class="search-submit" value="Search" />
			</form>				</nav><!-- #site-navigation -->
			</div><!-- #navbar -->
		</header><!-- #masthead -->

		<div id="main" class="site-main">
	<div id="primary" class="content-area">
		<div id="content" class="site-content" role="main">
		
										
<article id="post-652" class="post-652 post type-post status-publish format-standard hentry category-uncategorized">
	<header class="entry-header">
		
				<h1 class="entry-title">
			<a href="http://a-laughlin.com/?p=652" rel="bookmark">Migration in progress</a>
		</h1>
		
		<div class="entry-meta">
			<span class="date"><a href="http://a-laughlin.com/?p=652" title="Permalink to Migration in progress" rel="bookmark"><time class="entry-date" datetime="2013-11-06T17:54:54+00:00">November 6, 2013</time></a></span><span class="categories-links"><a href="http://a-laughlin.com/?cat=1" title="View all posts in Uncategorized" rel="category">Uncategorized</a></span><span class="author vcard"><a class="url fn n" href="http://a-laughlin.com/?author=2" title="View all posts by Adam Laughlin" rel="author">Adam Laughlin</a></span>			<span class="edit-link"><a class="post-edit-link" href="http://a-laughlin.com/wp-admin/post.php?post=652&amp;action=edit" title="Edit Post">Edit</a></span>		</div><!-- .entry-meta -->
	</header><!-- .entry-header -->

		<div class="entry-content">
		<p>I recently switched blogging platforms, and that ate some of the blog&#8217;s original styling.  Migration in progress.  Alas, it&#8217;s a low priority right now, so the ETA is TBD.</p>
			</div><!-- .entry-content -->
	
	<footer class="entry-meta">
					<div class="comments-link">
				<a href="http://a-laughlin.com/?p=652#respond" title="Comment on Migration in progress"><span class="leave-reply">Leave a comment</span></a>			</div><!-- .comments-link -->
		
			</footer><!-- .entry-meta -->
</article><!-- #post -->
							
<article id="post-645" class="post-645 post type-post status-publish format-standard hentry category-javascript">
	<header class="entry-header">
		
				<h1 class="entry-title">
			<a href="http://a-laughlin.com/?p=645" rel="bookmark">A Spine.js with Handlebars.js JavaScript Tutorial</a>
		</h1>
		
		<div class="entry-meta">
			<span class="date"><a href="http://a-laughlin.com/?p=645" title="Permalink to A Spine.js with Handlebars.js JavaScript Tutorial" rel="bookmark"><time class="entry-date" datetime="2012-02-29T13:37:55+00:00">February 29, 2012</time></a></span><span class="categories-links"><a href="http://a-laughlin.com/?cat=2" title="View all posts in JavaScript" rel="category">JavaScript</a></span><span class="author vcard"><a class="url fn n" href="http://a-laughlin.com/?author=2" title="View all posts by Adam Laughlin" rel="author">Adam Laughlin</a></span>			<span class="edit-link"><a class="post-edit-link" href="http://a-laughlin.com/wp-admin/post.php?post=645&amp;action=edit" title="Edit Post">Edit</a></span>		</div><!-- .entry-meta -->
	</header><!-- .entry-header -->

		<div class="entry-content">
		<p>A couple of the JavaScript MVC frameworks I&#8217;ve been playing with lately are Spine.js and Backbone.js.  While they share many similarities, one area they differ in is the number of tutorials.  Backbone has many working <a href="http://coenraets.org/blog/2011/12/backbone-js-wine-cellar-tutorial-part-1-getting-started/">native</a> <a href="http://www.quora.com/What-are-some-good-resources-for-Backbone-js">JavaScript</a> <a href="http://backbonetutorials.com/">tutorials</a>. <a href="http://spinejs.com/docs/example">Spine&#8217;s</a> are <a href="http://kazimanzurrashid.com/posts/meet-spine-dot-js-my-framework-of-choice-for-client-side-mvc-part-1">largely</a> <a href="https://github.com/maccman/spine.todos">written</a> in <a href="http://coffeescript.org/">Coffeescript</a>.  While I appreciate Coffeescript, I wanted to write a simple native JavaScript Spine app to give the framework a spin.  None of the working examples I were found were written in JavaScript, so I thought &#8220;Hey! Good opportunity to write a simple Spine tutorial!&#8221;.</p>
<p>The tutorial assumes you&#8217;ve already read at least some of <a href="http://spinejs.com/docs">Spine&#8217;s documentation</a>.  My goal is not to repeat the existing documentation, only to provide a simple tutorial that works, so I&#8217;ll keep this post short and the code comments thorough.</p>
<p>The sample data is similar to what you might find in a Google Adwords interface.  Campaigns have ad groups, and ad groups have keywords.  Campaigns, Ad Groups, and Keywords all have their own models.  Each cell in the grid, and the grid itself, get Controllers. The click events on the cells are handled by the jQuery fisheyeGrid plugin, so they&#8217;re absent from the controllers.  In the keyword cells are a link you can click to change its color.  That color state is stored in localstorage in the examples below where it&#8217;s enabled. The views are created by Handlebars.js, and rendered to the page in the controllers.</p>
<p>Technologies used in this tutorial:</p>
<ul>
<li><a href="http://a-laughlin.com/2011/12/visualization/fisheye-grids-a-user-interface-design-pattern/">jQuery fisheyeGrid plugin for styling, animation, and cell click events</a></li>
<li><a href="http://spinejs.com">Spine.js</a>, a client-side JavaScript MVC framework, for models, controllers, and view rendering</li>
<li><a href="http://handlebarsjs.com/">Handlebars.js Templates</a> for view creation/compilation</li>
<li>HTML5 local storage (via spine.local, spine&#8217;s localstorage plugin. It&#8217;s disabled on this page and working in the example.)</li>
<li><a href="http://html5boilerplate.com/">HTML5 boilerplate</a> for the basic HTML and CSS</li>
<li>JSON (for sample data)</li>
<li>CSS for styling</li>
</ul>
<p>Ways to access the code:</p>
<ul>
<li><a href="https://github.com/a-laughlin/Tutorials/tree/master/spine-handlebars-fisheye">View the project on GitHub</a></li>
<li><a href="https://github.com/a-laughlin/Tutorials/blob/master/spine-handlebars-fisheye/spine-handlebars-fisheye-tutorial.zip?raw=true">Download the zipped tutorial and files</a></li>
<li><a href="http://jsfiddle.net/a_laughlin/FfxUk/">Play with a working example on jsFiddle (minus localstorage)</a></li>
</ul>
<p>A post discussing the visual/interaction design is coming next.  Feel free to post questions/comments here or on GitHub.</p>
<p>Finally, here&#8217;s what you should see when running the example:</p>
<p>  <script id="cell-template" type="text/x-handlebars-template"></p>
<div class="cell-name">{{name}}</div>
<p>  </script><br />
  <script id="cell-keyword-template" type="text/x-handlebars-template">
      <img class="cell-chart1" src="{{chart1}}" alt="someChart" />
      <img class="cell-sparkChart" src="{{sparkChart}}" alt="sparkChart" /></p>
<div class="cell-ctr"><span class="span-ctr">CTR: </span>{{ctr}}</div>
<div class="cell-name"><span class="span-keyword">Keyword: &quot;</span>{{name}}<span class="span-keyword">&quot;</span></div>
<div class="cell-red-toggle"><span class="span-red{{#if hasColor}} redColor{{/if}}">Click to change colors!</span></div>
<p>  </script><br />
  <script id="grid-row-template" type="text/x-handlebars-template"></p>
<div class="row"></div>
<p>  </script></p>
<div id="spine-example" role="main">
<div id="campaign-grid">
<div class="row">
<div>Keywords</div>
<div>Ad Group</div>
<div>Campaign</div>
<p>        <!-- templates insert here-->
      </div>
</p></div>
</p></div>
<p> &nbsp;</p>
<p> &nbsp;</p>
			</div><!-- .entry-content -->
	
	<footer class="entry-meta">
					<div class="comments-link">
				<a href="http://a-laughlin.com/?p=645#respond" title="Comment on A Spine.js with Handlebars.js JavaScript Tutorial"><span class="leave-reply">Leave a comment</span></a>			</div><!-- .comments-link -->
		
			</footer><!-- .entry-meta -->
</article><!-- #post -->
							
<article id="post-601" class="post-601 post type-post status-publish format-standard hentry category-visualization tag-interaction-design tag-javascript tag-jquery tag-user-experience tag-visualization">
	<header class="entry-header">
		
				<h1 class="entry-title">
			<a href="http://a-laughlin.com/?p=601" rel="bookmark">Fisheye Grids &#8211; A User Interface Design Pattern</a>
		</h1>
		
		<div class="entry-meta">
			<span class="date"><a href="http://a-laughlin.com/?p=601" title="Permalink to Fisheye Grids &#8211; A User Interface Design Pattern" rel="bookmark"><time class="entry-date" datetime="2011-12-01T00:26:55+00:00">December 1, 2011</time></a></span><span class="categories-links"><a href="http://a-laughlin.com/?cat=6" title="View all posts in Visualization" rel="category">Visualization</a></span><span class="tags-links"><a href="http://a-laughlin.com/?tag=interaction-design" rel="tag">Interaction Design</a>, <a href="http://a-laughlin.com/?tag=javascript" rel="tag">JavaScript</a>, <a href="http://a-laughlin.com/?tag=jquery" rel="tag">jQuery</a>, <a href="http://a-laughlin.com/?tag=user-experience" rel="tag">User Experience</a>, <a href="http://a-laughlin.com/?tag=visualization" rel="tag">Visualization</a></span><span class="author vcard"><a class="url fn n" href="http://a-laughlin.com/?author=2" title="View all posts by Adam Laughlin" rel="author">Adam Laughlin</a></span>			<span class="edit-link"><a class="post-edit-link" href="http://a-laughlin.com/wp-admin/post.php?post=601&amp;action=edit" title="Edit Post">Edit</a></span>		</div><!-- .entry-meta -->
	</header><!-- .entry-header -->

		<div class="entry-content">
		<p>While perusing the University of Maryland&#39;s Human-Computer Interaction Lab site, I ran into an interesting interface named <a href="http://www.cs.umd.edu/hcil/fishcal/publications.shtml">Datelens</a>. It improves mobile calendar usability, especially on complex tasks like date comparisons.</p>
<p>While Datelens is tied to Outlook/calendars, the fisheye grid UI pattern is more broadly applicable.&nbsp; Uses include any information seeking scenario where users want to zoom in on some information while retaining some context. Concrete uses include replacements for carousels, slideshows, calendars, shopping carts, and many of the ubiquitous modal (popup) window implementations.</p>
<p>Despite the benefits I haven&#39;t seen the grid pattern in any web apps, so I prototyped a jQuery plugin to play with it.&nbsp; Click below to expand example cells.  Clicking a closed cell when one is open will transition to that cell.</p>
<p>For the source, see <a href="https://gist.github.com/1413900">Github</a>.&nbsp; For the research, here&#39;s a <a href="http://hubscher.org/roland/courses/hf765/readings/p90-b_bederson.pdf">PDF</a>. If you use it some where, I&#39;d love to hear how your UX analytics data compares with other info zooming methods.</p>
<p>Note: As it&#8217;s only a prototype, I haven&#8217;t tested it in IE.</p>
<h2>Example Calendar Grid</h2>
<div id="fisheye-grid">&nbsp;</div>
<h2>&nbsp;</h2>
<h2>Example Image Grid</h2>
<div id="kitten-grid">&nbsp;</div>
<div>&nbsp;</div>
			</div><!-- .entry-content -->
	
	<footer class="entry-meta">
					<div class="comments-link">
				<a href="http://a-laughlin.com/?p=601#respond" title="Comment on Fisheye Grids &#8211; A User Interface Design Pattern"><span class="leave-reply">Leave a comment</span></a>			</div><!-- .comments-link -->
		
			</footer><!-- .entry-meta -->
</article><!-- #post -->
							
<article id="post-362" class="post-362 post type-post status-publish format-standard hentry category-javascript category-visualization">
	<header class="entry-header">
		
				<h1 class="entry-title">
			<a href="http://a-laughlin.com/?p=362" rel="bookmark">Visualizing Cambridge Chicago&#8217;s Data with jQuery and Google Maps + Charts + Refine + Fusion Tables</a>
		</h1>
		
		<div class="entry-meta">
			<span class="date"><a href="http://a-laughlin.com/?p=362" title="Permalink to Visualizing Cambridge Chicago&#8217;s Data with jQuery and Google Maps + Charts + Refine + Fusion Tables" rel="bookmark"><time class="entry-date" datetime="2011-11-02T15:16:26+00:00">November 2, 2011</time></a></span><span class="categories-links"><a href="http://a-laughlin.com/?cat=2" title="View all posts in JavaScript" rel="category">JavaScript</a>, <a href="http://a-laughlin.com/?cat=6" title="View all posts in Visualization" rel="category">Visualization</a></span><span class="author vcard"><a class="url fn n" href="http://a-laughlin.com/?author=2" title="View all posts by Adam Laughlin" rel="author">Adam Laughlin</a></span>			<span class="edit-link"><a class="post-edit-link" href="http://a-laughlin.com/wp-admin/post.php?post=362&amp;action=edit" title="Edit Post">Edit</a></span>		</div><!-- .entry-meta -->
	</header><!-- .entry-header -->

		<div class="entry-content">
		<div class="content-left-column">
<h2 class="clear-none">&#8220;What story do I want to tell?&#8221;</h2>
<p>
		That question lies at the heart of every visualization.&nbsp; After two things were stolen in my first two weeks in Cambridge, I got curious about thefts trends.&nbsp; <a href="http://flowingdata.com/2010/04/29/visualizing-data-ask-a-question-first/">Questions help</a> me clarify stories. In this case there are two:
	</p>
<ul>
<li>How does total theft in some areas compare to total theft in others?</li>
<li>How does each area&#8217;s theft trend over time compare with others around it?</li>
</ul>
<p>
		My initial intent was to map the two questions using Cambridge and/or Boston metro area data.&nbsp; The closest I found was a reference from the <a href="http://www2.cambridgema.gov/cdd/data/datalinks.html">Cambridge data links</a> page to some pre-made <a href="http://www.caliper.com/Maptitude/MassStats/Map.aspx">2005 maps</a>.&nbsp; Mapping the questions sounded fun despite Cambridge data availability issues (apparently a <a href="http://bostonography.com/2011/autumn-streets/" target="_blank">shared problem</a>), so I went ahead using data from <a href="https://data.cityofchicago.org/">Chicago&#8217;s awesome city data portal</a>.&nbsp; The resulting map is on the right.
	</p>
<div class="content-right-column">
<h3>2003-2010 total Chicago thefts under $300 by ward</h3>
<dl id="thefts-map-legend">
<div>
<dt id="legend-totals">
					<img style="background-color: #61536e" height="30" src="//maps.gstatic.com/mapfiles/transparent.png" width="30" /> Total per Ward
				</dt>
<dd>- Darker == more total theft</dd>
</p></div>
<div>
<dt id="legend-trends"> Theft Trend</dt>
<dd>- % change from 2003 on a 20%-120% scale</dd>
</p></div>
</dl>
<figure>
<div id="chicago-theft-yrs">Loading&#8230;</div>
<figcaption class="clear-none">
<p>
				2003-2010 total Chicago thefts under $300 US dollars by ward and year, including ID thefts.&nbsp; Whether $300 is adjusted for inflation is unknown.&nbsp; Reporting procedures and other potential bias sources are also unknown.&nbsp; Excludes 2001-2002 due to irregular/infrequent entries, and a small number of entries lacking wards. From <a href="https://data.cityofchicago.org/Public-Safety/2001-present-Theft-300-by-ward-year/jq8x-ret8">City of Chicago crime data view</a> on 2011/09/22. Originally from <a href="https://data.cityofchicago.org/Public-Safety/Crimes-2001-to-present/ijzp-q8t2">2001-Present full crime data table</a>.
			</p>
</figcaption>
</figure></div>
<h2>Crafting the Stories</h2>
<p>Time series and spatial relationships are a challenge to combine in a single visualization. Three options include animation, small multiples, and embedded charts.</p>
<h3>Animation</h3>
<p>
		One solution is <a href="http://www.youtube.com/watch?v=pM8XbzdlZIg" target="_blank">motion</a> &#8211; i.e., representing change over eight years by showing eight maps over eight seconds. I&#8217;m not a huge fan of animated choropleths since <a href="http://thecartofish.com/fish_thesis.pdf" target="_blank">humans cannot effectively comprehend color transitions in fifty polygons</a> (7.84MB).
	</p>
<h3>Small Multiples</h3>
<p>
		Another option advocated by Edward Tufte is <a href="http://www.juiceanalytics.com/writing/better-know-visualization-small-multiples/" target="_blank">small multiple maps</a>.&nbsp; In this scenario, it requires substantial effort to compare many proximal polygons over time, so it wasn&#8217;t my first choice.
	</p>
<h3>Embedded Charts</h3>
<p>Embedded charts are ideal.&nbsp; The combination of line charts and geographically positioned wards shows both spatial relationships and trends effectively.&nbsp; Still, they require some tweaking to get there &#8211; desaturation, map feature removal, selective recoloring, hiding polygon boundaries to emphasize the trend charts, and varying theft total saturation and lightness all help both stories stand out depending on focus. While absent polygon borders make individual wards differentiation harder, the major areas are more visible &#8211; a reasonable tradeoff of low-level details for high-level patterns and trends.</p>
<h2>Results</h2>
<p>Assuming the data is valid for this purpose, reported thefts in all wards showed net declines between 2003 and 2010.  Contrasts between wards with high and low total theft are easy to see &#8211; higher theft in the city center extends to the Northwest, West, and South.</p>
<p>Overall I&#8217;m happy with the outcome and had fun creating it. In fact, If you&#8217;re reading this and you happened to steal a fridge in front of my steps a few weeks ago, consider it a gift.&nbsp; Cheers!</p>
<h2>Supporting Technologies</h2>
<p>Technologies that went into this visualization (roughly in order applied):</p>
<ul>
<li><a href="https://data.cityofchicago.org/Public-Safety/Crimes-2001-to-present/ijzp-q8t2">Chicago Theft Data</a> (CSV)</li>
<li><a href="https://data.cityofchicago.org/browse?limitTo=blob">Chicago Ward Boundaries</a> (ESRI Shapefiles)</li>
<li><a title="http://www.shpescape.com/" href="http://www.shpescape.com/">Shpescape.com</a> (Convert ESRI shapefiles to ward Fusion Tables)</li>
<li><a href="www.google.com/fusiontables/Home" target="_blank">Fusion Tables</a> (Merge ward geo data and thefts data. Export to Google Refine for cleaning. Re-import cleaned data. Format KML via handy style formatter in visualize&gt;map menu)</li>
<li><a href="http://code.google.com/p/google-refine/" target="_blank">Google Refine</a> (Import merged data as CSV. Remove irrelevant rows, including rows with no ward and years with spotty data.&nbsp; Export merged table as CSV for Fusion Tables re-import. Export years, thefts per year, and ward centroids as JSON for JavaScript to create line and bar charts)</li>
<li><a href="http://code.google.com/apis/loader/">Google API Loader</a> (Load the maps API)</li>
<li><a href="http://code.google.com/apis/maps/documentation/javascript/" target="_blank">Google Maps API</a> (Framework for interacting with Google Maps)</li>
<li><a href="http://code.google.com/apis/chart/image/" target="_blank">Google Charts API &#8211; Image Charts</a> (Info window bar charts and embedded line charts)</li>
<li>JavaScript / jQuery (File loading, API interaction, and general display)</li>
</ul>
<h2>Upcoming</h2>
<p>
		Ahead eventually, probably, another visualization mapping near real-time human psychological well-being by country with the newly released <a href="http://nssm.nextstagevolution.com/nssmworld.cfm">NextStage SampleMatch</a> data. Cool stuff!
	</p>
</div>
			</div><!-- .entry-content -->
	
	<footer class="entry-meta">
					<div class="comments-link">
				<a href="http://a-laughlin.com/?p=362#comments" title="Comment on Visualizing Cambridge Chicago&#8217;s Data with jQuery and Google Maps + Charts + Refine + Fusion Tables">One comment so far</a>			</div><!-- .comments-link -->
		
			</footer><!-- .entry-meta -->
</article><!-- #post -->
							
<article id="post-512" class="post-512 post type-post status-publish format-standard hentry category-javascript">
	<header class="entry-header">
		
				<h1 class="entry-title">
			<a href="http://a-laughlin.com/?p=512" rel="bookmark">Staging Server &#8211; Fast and Free</a>
		</h1>
		
		<div class="entry-meta">
			<span class="date"><a href="http://a-laughlin.com/?p=512" title="Permalink to Staging Server &#8211; Fast and Free" rel="bookmark"><time class="entry-date" datetime="2011-10-29T15:10:09+00:00">October 29, 2011</time></a></span><span class="categories-links"><a href="http://a-laughlin.com/?cat=2" title="View all posts in JavaScript" rel="category">JavaScript</a></span><span class="author vcard"><a class="url fn n" href="http://a-laughlin.com/?author=2" title="View all posts by Adam Laughlin" rel="author">Adam Laughlin</a></span>			<span class="edit-link"><a class="post-edit-link" href="http://a-laughlin.com/wp-admin/post.php?post=512&amp;action=edit" title="Edit Post">Edit</a></span>		</div><!-- .entry-meta -->
	</header><!-- .entry-header -->

		<div class="entry-content">
		<p>Staging environments can be expensive in time and materials.&nbsp; Turns out there&#39;s a way to bypass all of that for testing JavaScript.&nbsp; It&#39;s also easy to learn, quick to implement, works across platforms and browsers, and best of all, free.</p>
<h2>Test Your Code On Your Live Site!</h2>
<p>No kidding.  Using a file loader like <a href="http://requirejs.org/" target="_blank">Require.js</a>, you can get a JavaScript staging environment running in less time than it takes to decide on a physical server. Here&#39;s how:</p>
<pre>
//if you don't already have a namespace, create one to keep things tidy.
var foo={};

// List the live files you would normally load.
foo.loadFilesStr="file1.js,file2.js,file3.js";

// Get your favorite cookie reading function.  Here's one I use.
foo.strToObj=function(str,keySplit,pairSplit){var y={},k=keySplit||'&#038;',fn=k.substr?'split':'match',a=str[fn](k),i=0,p,L=a.length;for(;L>i;i++){p=a[i][fn](pairSplit||'=');y[p[0]]=p[1]||''}return y};

// Pick a cookie name.  "devEnv" works.
foo.devCookieName= 'devEnv';

// Read the cookies
foo.cookie = foo.strToObj( document.cookie, '; ', '=');

// get the dev cookie's value.
foo.devCookieVal=foo.cookie[foo.devCookieName];

// if a value exists, replace your normal files with a string of files from the cookie
if( foo.devCookieVal ){ foo.loadFilesStr = foo.devCookieVal.split(',') }

// make them an array to prep them for your favorite script loader.
foo.loadFilesArray=foo.loadFilesStr.split(',');

// and load the scripts.
require(foo.loadFilesStr, function(){
    $(document).ready(function(){ do stuff here })
});
</pre>
<p>Finally, change the files you want to load with a bookmarklet that displays and sets the cookie values, like this one.</p>
<pre>
javascript:(function(foo,cookieName){
  var cookieVal=foo.cookie[cookieName]||'',
  filesArray = cookieVal.split(','), // get the cookie value
  i=0, // set an iterator
  L=filesArray.length, // and a length for the files array
  tempStr='', // and a temporary string to append file names to for display
  userEnteredStr = (function () {
    for (;L>i;i++) { // loop over file names
      (tempStr += ('nn' + filesArray[i])); // append them for display
    }
    var reply = prompt ( // prompt for any changes
      cookieName + ' will be set to the following paths:' + tempStr +
      'nnChange the cookie value below to alter them. '+
      'Leave blank or cancel to remove the cookie',
      cookieVal // display the val if one exists
    );
    return reply;
  })(),
  expir = (userEnteredStr ? (new Date((new Date).getTime() + 1e11).toGMTString()) : '-1'), // set the expiration
  newCookieVal = (cookieName + '=' + (userEnteredStr||'') + '; expires=' + expir + '; path=/'); // set the new value
  document.cookie = newCookieVal; // write the cookie
  alert (userEnteredStr ? ('settingn' + newCookieVal) : cookieName+' removed'); // notify the action taken
})(foo,foo.devCookieName);
</pre>
<p>Finally, for developer usability I set a notification to indicate what files are loading.</p>
<pre>
$('body').prepend(
   '&lt;div id="devCookieVals" style="position:fixed;left:0;top:0;z-index:1000;">'+
   '&lt;span style="background-color:#777;color:#DDD">Dev Files Loaded:&lt;/span> '+
   foo.cookie[foo.cookieName]+'&lt;/div>');
</pre>
<p>That&#39;s it.&nbsp; Visitors will continue receiving the live files. You can load any set of files you&#39;d like by clicking your bookmarklet and refreshing, including new jQuery versions, unit tests, and more. Enjoy!</p>
			</div><!-- .entry-content -->
	
	<footer class="entry-meta">
					<div class="comments-link">
				<a href="http://a-laughlin.com/?p=512#respond" title="Comment on Staging Server &#8211; Fast and Free"><span class="leave-reply">Leave a comment</span></a>			</div><!-- .comments-link -->
		
			</footer><!-- .entry-meta -->
</article><!-- #post -->
							
<article id="post-360" class="post-360 post type-post status-private format-standard hentry category-javascript">
	<header class="entry-header">
		
				<h1 class="entry-title">
			<a href="http://a-laughlin.com/?p=360" rel="bookmark">Private: Shoestring 0.3 &#8211; Overview</a>
		</h1>
		
		<div class="entry-meta">
			<span class="date"><a href="http://a-laughlin.com/?p=360" title="Permalink to Private: Shoestring 0.3 &#8211; Overview" rel="bookmark"><time class="entry-date" datetime="2011-10-28T18:38:10+00:00">October 28, 2011</time></a></span><span class="categories-links"><a href="http://a-laughlin.com/?cat=2" title="View all posts in JavaScript" rel="category">JavaScript</a></span><span class="author vcard"><a class="url fn n" href="http://a-laughlin.com/?author=2" title="View all posts by Adam Laughlin" rel="author">Adam Laughlin</a></span>			<span class="edit-link"><a class="post-edit-link" href="http://a-laughlin.com/wp-admin/post.php?post=360&amp;action=edit" title="Edit Post">Edit</a></span>		</div><!-- .entry-meta -->
	</header><!-- .entry-header -->

		<div class="entry-content">
		<p>Shoestring is light weight JavaScript organization for Developer who:</p>
<ul>
<li>Are new to JavaScript and wondering how to organize</li>
<li>Have sites containing 1 to 10000 pages and 1-100 domains</li>
<li>Need structure and organization, but less than a full web application architectures like Backbone, Angular, and Ember.</li>
<li>Need to integrate code from many vendors</li>
<li>Do not have time to reorganize all their JavaScript, but do have time to reorganize little bits at a time.</li>
<li>Need to get consistent analytics data across all their pages</li>
</ul>
<p><span style="line-height: 1.5;">Using Shoestring results in simpler development, improved code readability, and decreased maintenance costs.</span></p>
<p>It has two parts:<a href="http://static.1button.org/js/shoestring.0.3.min.js" target="_blank">Shoestring.js</a> and a site-wide index of all your code, called the table of contents (ToC).  First imagine the spaghetti code you&#8217;re used to seeing.  Now here&#8217;s a standard shoestring implementation:</p>
<h2>Implementation Example Part 1, Script and Config Object</h2>
<pre>&lt;script&gt;
// config object defining an initial Table of Contents file to load
var shoestring={ initial: ['//static.1button.org/js/1button.org.toc.js' ] };
// (function($){ ... paste Shoestring minified here, see link above for the actual code.
&lt;/script&gt;</pre>
<h2>Implementation Example Part 2, Table of Contents.</h2>
<p>The Table of Contents below contains every way you can use shoestring &#8211; all in one array of pages and entries.  When shoestring runs, it parses the ToC and executes the entries with pages that match location.href (the default).  The syntax is intentionally simple for consistency, and it requires one function.</p>
<pre>shoestring.toc.push(function(){return [ // return the Table of Contents array

  {page:'http', entries:[ // organized by page, and containing entries
      { is:'div', fn:'doStuffInThisDiv'}, // that can call functions, both without arguments...
      { is:'div.foo', fn:{doStuff:'stuff'} }, // and with arguments
      { is:'div.bar', fn:{ addClass:'stuff' , css:{color:'red'}} } // including jQuery functions
      { is:'div.baz', fn:{ alert:'Stuff!'} }, // and optionally any others
      { is:'div.bop', fn:{ hide:'', alert:'Hidden!'} } //or both!
      ]},

  {page: /^https:/, entries:[ // also secure pages (accepts regexes too)
      { files:['//foo.com/stuff.js']}, // can just load files
      { is:'div.securefoo', files:['//foo.com/cycle.js'], fn:'cycle'}, // or plugins requiring files
      { is:'div.securebar', files:['file1.js','file2.js','file3.js'], fn:'cycleStuff'}, // including multiple files
      { is:'div.securebaz' , files:[{url:'somefile.json', dataType:'JSON'}], fn:'ss_parserFn'} // and JSON(P) and XML
      { when: $.browser.ie &amp;&amp; $.browser.version &lt; 9, files:['html5shiv.js']}, // and specific condition tests
      ]},

  {page:/foo=54321/, entries:[ // on specific pages, etc.
      { is:'div.foo', on:'click', fn:'showPopup'}, // add events that happen every time
      { is:'div.bar', on:'click', bind:'one', fn:'showPopup'}, // or just once
      { is:'div.baz', on:'click', fn:'ss_prevent'}, // or prevent them from happening
      { is:'div.gitum', on:'click', files:['file1.js','file2.js'], fn:{alert:'Loaded!'}}, // events + files too!
      ]}

]});</pre>
<p>Unlike complex methodologies or organization structures, there are only six properties to remember (in, on, files, fn, bind, and when), and a glance is sufficient to tell which pages contain which elements, functions, files, and events.  On unfamiliar sites <a href="http://svn.a-laughlin.com/a-laughlin.com.js" target="_blank">like mine</a> that incorporate jQuery plugins, google maps, google analytics, JSONP, and XML, the Table of Contents syntax is identical.  It&#8217;s like looking at the table of contents in a book you&#8217;re about to read.  You can skip to interesting chapters.</p>
<h2>Configuration Object</h2>
<p>The configuration object in part 1 only changed the initial files.  Here are all the options:</p>
<pre>shoestring={
  pageTarget:location.href, // target for ToC "page:" checks.
  fnContexts:[shoestring,window], // default contexts for shoestring to execute entry.fn with
  initial:['//'+location.hostname+'/js/'+location.hostname+'.toc.js'], // Initial files to load. Default is ToC file.
  urls:{},  // Standard place to store developers' file paths.
  preInitPlugins:{}, // generally only useful in edge case file loading.  I'll get to it in a later post.
  entryDefaults:{ // defaults for ToC entries
    is:'body', // is === jQuery selector. Literally translated to $(entry.is)
    fn:'', // functions to execute on the collection selected with "is". Syntax is string or object.
    bind:'live', // jQuery bind type.  May contain 'one', 'bind', etc.
    on:'', // space separated events 'click', "mouseenter mouseout", etc. More in Adding Code
    when:1, // optional test. Falsy - (0,false,null,undefined,'',NaN, etc.) will skip entry.
    files:[] // array of script paths or $.ajax() objects to load. See "Writing Functions" below for getting file data
  }
}</pre>
<h2>That&#8217;s the Structure. This is Adding Code.</h2>
<h3>Placing Functions</h3>
<p>Functions can go anywhere, and usually do.  For simple sites, I recommend putting them all just below the table of Contents <a href="http://svn.a-laughlin.com/a-laughlin.com.js" target="_blank">like so</a> ( See section 3.  I&#8217;m geeky like that).</p>
<h3>Calling Functions</h3>
<p>When added to the ToC entries&#8217; fn property, jQuery functions will run on all elements in $(entry.is), and other functions will run once.  To call functions that require multiple arguments, place another function around them. For example,</p>
<pre>myFunction('foo','bar','baz') // becomes...

function myWrapperFunction(){
   myFunction('foo','bar','baz'); // and call with { is:'div', fn:'myWrapperFunction'}
};</pre>
<h3>Writing Functions</h3>
<p>While functions written in nearly any way will work, for new code I recommend trying out shoestring&#8217;s other function &#8211; shoestring pluginFactory.  It creates jQuery plugins.  Functions starting with ss_ receive two arguments every time, making both development and debugging easier.  Here&#8217;s the syntax:</p>
<pre>shoestring.pluginFactory({
  ss_function1:function(arg, entry){ // note, two arguments
    // Do stuff here
  },
  ss_function2:function(arg, entry){ // note, same two arguments. Dev and debug are both easier with a consistent interface.
    var data = entry.files[0].returnedData; // Here's how to get a file's data (JSON, XML, HTML, etc)
    entry.eventObj.preventDefault(); // e.g., and how to prevent clicks.  (event === entry.eventObj),
  }
});</pre>
<p>For those familiar with writing jQuery plugins,this function is identical to $.fn.foo = function(){}, except it takes care of returning this.each() for convenience and space.</p>
<h2>And That&#8217;s Everything</h2>
<p>Happy Coding! Here&#8217;s the <a href="http://static.1button.org/js/shoestring.0.3.js">dev version</a>.</p>
			</div><!-- .entry-content -->
	
	<footer class="entry-meta">
					<div class="comments-link">
				<a href="http://a-laughlin.com/?p=360#respond" title="Comment on Private: Shoestring 0.3 &#8211; Overview"><span class="leave-reply">Leave a comment</span></a>			</div><!-- .comments-link -->
		
			</footer><!-- .entry-meta -->
</article><!-- #post -->
							
<article id="post-323" class="post-323 post type-post status-private format-standard hentry category-jquery">
	<header class="entry-header">
		
				<h1 class="entry-title">
			<a href="http://a-laughlin.com/?p=323" rel="bookmark">Private: Organizing JavaScript with jQuery and Shoestring &#8211; A Brief Tutorial</a>
		</h1>
		
		<div class="entry-meta">
			<span class="date"><a href="http://a-laughlin.com/?p=323" title="Permalink to Private: Organizing JavaScript with jQuery and Shoestring &#8211; A Brief Tutorial" rel="bookmark"><time class="entry-date" datetime="2011-09-28T22:24:41+00:00">September 28, 2011</time></a></span><span class="categories-links"><a href="http://a-laughlin.com/?cat=3" title="View all posts in jQuery" rel="category">jQuery</a></span><span class="author vcard"><a class="url fn n" href="http://a-laughlin.com/?author=2" title="View all posts by Adam Laughlin" rel="author">Adam Laughlin</a></span>			<span class="edit-link"><a class="post-edit-link" href="http://a-laughlin.com/wp-admin/post.php?post=323&amp;action=edit" title="Edit Post">Edit</a></span>		</div><!-- .entry-meta -->
	</header><!-- .entry-header -->

		<div class="entry-content">
		<p>Books have a table of contents for good reason &#8211; we can find what we want quickly.&nbsp; Web sites have no table of contents for developers. Faced with inherited spaghetti and inconsistent data in my own work with Google Analytics, I wrote a JavaScript organization framework as a solution. It&#39;s named Shoestring in an ode to nonprofit budget constraints.&nbsp; Shoestring is a JavaScript table of contents that simplifies development and maintenance. It organizes a site&#39;s elements into a table of contents, gets dependent files for them, and executes functions on those containers. It runs in the document&#39;s head like a script loader, requesting and executing all your site&#39;s utilities, plugins, and data files quickly and predictably.</p>
<p>Jumping in to the tutorial, let&#39;s start with an example div containing a jQuery cycle slideshow.&nbsp; Here&#39;s the html:</p>
<pre>&lt;div id=&quot;slideshow&quot; style=&quot;border:1px solid #ccc;&quot;>
	&lt;p class=&quot;slideshow-example&quot;>&lt;img src=&quot;//static.1button.org/floss4good-logo.gif&quot; />&lt;/p>
	&lt;p class=&quot;slideshow-example&quot;>&lt;img src=&quot;//static.1button.org/active-fish.png&quot; />&lt;/p>
	&lt;p class=&quot;slideshow-example&quot;>&lt;img src=&quot;//static.1button.org/switch-bw.png&quot; />&lt;/p>
&lt;/div></pre>
<p>Here&#39;s what the slideshow&#39;s table of contents entry looks like:</p>
<pre>{ is:&#39;#slideshow&#39; , files:['http://static.1button.org/js/jquery.cycle.all.min.js'] , fn:&#39;cycle&#39;}
</pre>
<p>In this entry we specified the container, dependent file, and the function to call.&nbsp; To initialize the table of contents so the files will load and cycle will run, we need to add its structure.&nbsp; The book&#39;s chapters are page names. Each chapter contains entries for the containers to target on the page.&nbsp; Here&#39;s how it looks, followed by the example in action.</p>
<pre>shoestring.initToc({
    {page:/shoestring-a-brief-tutorial/, entries:[
        { is:&#39;#slideshow&#39; , files:['http://static.1button.org/js/jquery.cycle.all.min.js'] , fn:&#39;cycle&#39;}
    ]},
})</pre>
<div class="showGracefully" id="slideshow" style="border:1px solid #ccc">
<p class="slideshow-example"><img p="" src="//static.1button.org/floss4good-logo.gif" /></p>
<p class="slideshow-example"><img p="" src="//static.1button.org/active-fish.png" /></p>
<p class="slideshow-example"><img p="" src="//static.1button.org/switch-bw.png" /></p>
</div>
<p>&nbsp;</p>
<p>Next up, a high level look at the structure, followed by an example of a Shoestring Google Analytics and Google Website Optimizer plugin that allows you to easily run multivariate tests, even on your JavaScript.</p>
<p><a href="http://static.1button.org/js/shoestring.0.3.min.js" target="_blank">Shoestring minified</a> and gzipped is around 1KB. To use it, simply insert it into the head of your document after jQuery.&nbsp; Feel free to check out the commented <a href="http://static.1button.org/js/shoestring.0.3.js" target="_blank">dev version</a> too.</p>
			</div><!-- .entry-content -->
	
	<footer class="entry-meta">
					<div class="comments-link">
				<a href="http://a-laughlin.com/?p=323#comments" title="Comment on Private: Organizing JavaScript with jQuery and Shoestring &#8211; A Brief Tutorial">One comment so far</a>			</div><!-- .comments-link -->
		
			</footer><!-- .entry-meta -->
</article><!-- #post -->
							
<article id="post-62" class="post-62 post type-post status-private format-standard hentry category-jquery tag-javascript tag-jquery tag-shoestring">
	<header class="entry-header">
		
				<h1 class="entry-title">
			<a href="http://a-laughlin.com/?p=62" rel="bookmark">Private: JavaScript Chaos</a>
		</h1>
		
		<div class="entry-meta">
			<span class="date"><a href="http://a-laughlin.com/?p=62" title="Permalink to Private: JavaScript Chaos" rel="bookmark"><time class="entry-date" datetime="2011-03-27T19:17:40+00:00">March 27, 2011</time></a></span><span class="categories-links"><a href="http://a-laughlin.com/?cat=3" title="View all posts in jQuery" rel="category">jQuery</a></span><span class="tags-links"><a href="http://a-laughlin.com/?tag=javascript" rel="tag">JavaScript</a>, <a href="http://a-laughlin.com/?tag=jquery" rel="tag">jQuery</a>, <a href="http://a-laughlin.com/?tag=shoestring" rel="tag">shoestring</a></span><span class="author vcard"><a class="url fn n" href="http://a-laughlin.com/?author=2" title="View all posts by Adam Laughlin" rel="author">Adam Laughlin</a></span>			<span class="edit-link"><a class="post-edit-link" href="http://a-laughlin.com/wp-admin/post.php?post=62&amp;action=edit" title="Edit Post">Edit</a></span>		</div><!-- .entry-meta -->
	</header><!-- .entry-header -->

		<div class="entry-content">
		<h1>Shoestring: jQuery Structured. Chaos Organized.</h1>
<p>Note: This post is for a previous shoestring version. The load and execution order requirements of a combined GA+GWO implementation made me rethink parts of the core, leading to more flexibility.</p>
<p>Functions grow. Files multiply. Chaos happens.</p>
<p>Shoestring is a lightweight jQuery structure more organized than chaos and more intuitive than traditional programming methodologies. It is designed to increase developer productivity, reduce maintenance costs, and improve visitor experience in common website scenarios.&nbsp; As functions grow and files multiply, Shoestring organizes chaos so developers can focus on getting more done.</p>
<p>Shoestring core as .txt <a href="http://static.a-laughlin.com/js/a-laughlin.com.shoestring.txt">here</a>.</p>
<p>Below I&#8217;ll go over some of the <a class="track_benefits_anchor" href="#benefits" title="Jump to Benefits">benefits</a>, <a class="track_background_anchor" href="#background" title="Jump to Background">background</a>, <a class="track_jqexample_anchor" href="#jqexample" title="Jump to jQuery Example">jQuery example syntax</a>, <a class="track_ssexample_anchor" href="#ssexample" title="Jump to Shoestring Example">Shoestring example syntax</a>, and provide a <a class="track_devEnv_anchor" href="#devserver" title="Jump to Dev Version Link">link to object and plugin dev versions</a>.</p>
<h2 id="benefits">Benefits</h2>
<ul>
<li>Findable: Locate selectors, files, dependencies, and more through a visually simple layout and reusable queries</li>
<li>Robust: $.fn overwrite prevention, enforced interfaces, and other features maintain structure</li>
<li>Intuitive: Node-based organization is easy to understand at any experience level. Concise too!</li>
<li>Light: 1KB compressed and gzipped</li>
<li>Flexible: Similar to plugins, object defaults simplify choices and enable easy overrides</li>
<li>Fast: Collection storage, filter vs. find, pre-ready live binding, and other features accelerate execution</li>
<li>One click dev server: Simple. Cross-platform. Free. Unrelated to structure, but too cool to leave out</li>
</ul>
<h2 id="background">Background: What Motivated Shoestring?</h2>
<p>I was recently a web analyst for the nonprofit <a href="http://www.savethechildren.org/">Save the Children</a>. Many development projects also arose, including a multi-platform/domain Google Analytics implementation.&nbsp; We had data quality concerns due to an abundance of scripts written by many developers spanning many platforms.&nbsp; We needed a solution that would establish organization and continue ensuring good data after I left.</p>
<p>Given limited resources, it needed to be simple, intuitive, conceal complexity, eliminate unnecessary decisions, bake in good choices, resist breaking, and provide appropriate affordances and constraints.&nbsp; It also had to support varied jQuery plugins, new code from consultants and volunteers, integrate Google Analytics and Google Website Optimizer, seamlessly span seven different CMSs and twenty domains with more unknowns in the pipeline, and work error-free without dev environments.&nbsp; Being a sucker for challenges, I figured small and fast sounded pretty good too. <img src='http://a-laughlin.com/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /> &nbsp; The result is a jQuery framework that organizes code and significantly decrease development costs.[1]</p>
<p>I recently rewrote the framework core.&nbsp; While v1 continues ensuring good data, v2 is so helpful in my ongoing projects that I&#8217;d like to share it with others.&nbsp; It&#8217;s named Shoestring to reflect our budget at the time. <img src='http://a-laughlin.com/wp-includes/images/smilies/icon_smile.gif' alt=':)' class='wp-smiley' /> </p>
<p class="track_example-jump" id="examples">First a jQuery example, then the same example with Shoestring.</p>
<h2>Example: jQuery Syntax</h2>
<pre class="track_jquery-example">(function($){
$.ajax({
  url: 'http:google-analytics.com/ga.js',
  cache: true,
  dataType:'script'
})

$('span:eq(1)').live('mouseenter',function(){
  $(this).fadeOut(1000);
});

$('span').live('mouseleave',function(){
  $(this).css({color:blue});
});

$('span:eq(2)').live('click',function(){
  $(this).css({color:'red'}).addClass("heyIAmRed")
});

$(document).ready(function(){
  window.ss={nodes:{}};
  ss.nodes.$span=$('span');
  ss.nodes.$div=$('div');
})

$.ajax({
  url: 'http://host/jquery.cycle.js',
  cache: true,
  dataType:'script',
  success:function(){
    $('span:visible').live("click",function(){
      $(this).hide(500);
      $(document).ready(function(){
        ss.nodes.$div.filter('eq:(1)').bind('click',function(){
          $(this).toggleClass('bar');
          ss.nodes.$div.filter('.slideshow').cycle();
        })
      })
    });
  }
})

$(document).ready(function(){
  ss.nodes.$span.filter('#bar').one('click',function(){
    $(this).css({color:'green'}).addClass("heyIAmGreen");
  })
  ss.nodes.$span.filter('.someSpan').css({color:blue});
  ss.nodes.$span.filter('eq:(2)').bind("click",function(){
    $(this).css({color:red});
  })
});
})(jQuery)
</pre>
<h2 id="ssexample">Same Example: Shoestring Syntax</h2>
<p>Shoestring generates nearly identical code to the jQuery example above. While the code is the same, the contrast between jQuery and Shoestring syntax grows on many-featured sites with thousands of jQuery lines.</p>
<p>In the shoestring example below, the &#8216;head&#8217; element is for file loading and general initialization functions that do not target nodes. Shoestring stores other node collections on doc ready. The optional &#8216;is:&#8217; property contains a jQuery selector that filters the collection. Like chaining, functions in the &#8216;fn:&#8217; property execute sequentially on either the entire or filtered node collection.</p>
<pre class="track_shoestring-example">(function(s,$){
s.controlQueue.push({
head:[
  {files:'http:google-analytics.com/ga.js'}
],
span:[
  {is:':eq(1)',on:'mouseenter',fn:{ fadeOut:1000 }},
  {on:'mouseleave', fn:{ css:{color:blue} }},
  {is:':eq(2)',on:'click',fn:{ css:{color:'red'}, addClass:"heyIAmRed" }},
  {is:':visible',on:'click',files:'http://host/jquery.cycle.js',fn:{ hide:500, ss_triggerId:'div_1' }},
  {is:'#bar',on:'click',bind:'one',fn:{ css:{color:'green'}, addClass:"heyIAmGreen" }}
],
div:[
  {id:'div_1',is:':eq(1)',on:'click',bind:'bind',fn:{toggleClass:'bar',ss_triggerId:'div_2'}},
  {id:'div_2',is:'.slideshow',fn:{cycle:{}}}
]})
})(shoestring,jQuery)
</pre>
<p>The compact syntax makes finding selectors and other property values faster and visually easier. Querying the dbg object makes it instantaneous. See the &#8220;Another Example: Queries&#8221; section for a files + dependent functions example.</p>
<p>In addition to organization, Shoestring excels with multi-plugin dependencies.&nbsp; For example, a UI Modal + Cycle slideshow.&nbsp; Writing an interface plugin to wrap both UI and Cycle enables syntax like:</p>
<pre class="track_shoestring-multi-example">{is:'#slideshow',on:'click',files:'ui_files.js,cycle_file.js',fn:{ss_popSlides{timeout:3000,pictures:['one','two']}}}
</pre>
<p>Shoestring requests both files asynchronously before doc ready for a delay-free slideshow on click. A &#8220;preTest:&#8221; property also allows you to specify load pages and other conditions, eliminating the need to embed scripts in page templates or content. Properties including &#8220;is:&#8221;, &#8220;preTest:&#8221;, and others are commented in shoestring&#8217;s dev versions.</p>
<h2 id="devserver">Dev Version Access &#8211; One Click Dev Server</h2>
<p>Clicking <a href="javascript:(function(s,$){var%20cn='devEnv',svn='http://svn.a-laughlin.com/adam/a-laughlin.com.',dval=(svn+'shoestring.plugins.js,'+svn+'shoestring.xs.js,'+svn+'shoestring.tests.js'),cv='',cstr=s.ck(cn)||dval,ca=cstr.split(','),ustr=(function(){for(var%20i=0;i&lt;ca.length;i++){(cv+=('nn'+ca[i]));}var%20reply=prompt((cn+'%20will%20be%20set%20to%20the%20following%20paths:'+cv+'nnChange%20the%20cookie%20value%20below%20to%20alter%20them.%20Leave%20blank%20or%20cancel%20to%20remove%20the%20cookie'),cstr);return%20reply;})(),ce=(new%20Date((new%20Date).getTime()+1e11).toGMTString()),t=(ustr?ce:'-1'),cval=(cn+'='+(ustr?ustr:'')+';%20expires='+t+';%20path=/');document.cookie=cval;alert(ustr?('settingn'+cval):(cn+'%20removed'));})(shoestring,jQuery);" title="javascript virtual dev server bookmarklet">this bookmarklet</a> will raise a prompt containing a comma-separated string of dev file addresses.&nbsp; Click okay, refresh, and dev versions will replace the minified ones. The bookmarklet works by setting a cookie named &#8220;devEnv&#8221;. initXs (shoestring&#8217;s object translator) evaluates the cookie before other actions.&nbsp; When the cookie exists, initXs creates keys from the filenames and stores them to prevent duplicate requests (among other things).&nbsp; File names that differ by the letters &#8220;min&#8221; create identical keys, so the dev versions get keys first, prevent the min versions from loading, and voila!&nbsp; Instant cross-platform dev environment. You can test new plugins, other sites&#8217; scripts, anything, all right on your live site by simply changing the cookie value. After 8 months, this is still my favorite part of Shoestring. It&#8217;s so easy!</p>
<h2>Another Example: Queries</h2>
<p>If you clicked the bookmarklet above and refreshed, there should a div containing filenames at the top of the page. It indicates an active dev environment and lists the files. When the cookie exists shoestring also stores both pre and post-execution object states in the shoestring.dbg object. You can write reusable queries for files loaded, actions by specific page, selectors used, plugin calls, and more. If you click the div you&#8217;ll get a dropdown. It includes a simple object-to-jQuery printer for new developers to learn what commands executed in what order, as well as a list of files and dependent functions for a-laughlin.com. (note: The printer looks best in Gecko-based browsers like Firefox thanks to toSource() )</p>
<h2>Summary</h2>
<p>Similar to plugins, Shoestring object defaults conceal complexity, reduce decisions, shorten syntax and enable easy overrides. Techniques like stored collections, filter vs. find, pre-ready live binding, and others, produce faster jQuery than than most new developers write. Decreased file sizes reduce download times, and so far shoestring&#8217;s simple node-based organization seems effective at reducing maintenance costs and increasing productivity.</p>
<p>Thanks for taking the time to read.&nbsp; While I&#8217;m debating what to do with Shoestring, it seems worth sharing in its current state.&nbsp; Your thoughts are greatly appreciated and will play a big part in its direction.&nbsp; Have an opinion about the architecture or implementation?&nbsp; Think it has enough potential to continue developing?&nbsp; Have questions to ask? <a href="http://a-laughlin.com/2011/03/jquery/javascript-organization-exploring-structured-jquery/#respond">Post your thoughts.</a></p>
<p>&nbsp;</p>
<hr />
<p>1. Given environment changes and the absence of initial measurements or a control group, &#8220;significant&#8221; is difficult to quantify. It&#8217;s presence gives Save the Children a dev environment, makes analytics coding largely unnecessary across existing and new platforms, and the developer maintaining it rarely has to call me. It works well.</p>
			</div><!-- .entry-content -->
	
	<footer class="entry-meta">
					<div class="comments-link">
				<a href="http://a-laughlin.com/?p=62#comments" title="Comment on Private: JavaScript Chaos">View all 2 comments</a>			</div><!-- .comments-link -->
		
			</footer><!-- .entry-meta -->
</article><!-- #post -->
			
			
		
		</div><!-- #content -->
	</div><!-- #primary -->


		</div><!-- #main -->
		<footer id="colophon" class="site-footer" role="contentinfo">
				<div id="secondary" class="sidebar-container" role="complementary">
		<div class="widget-area">
			<aside id="search-2" class="widget widget_search"><form role="search" method="get" class="search-form" action="http://a-laughlin.com/">
				<label>
					<span class="screen-reader-text">Search for:</span>
					<input type="search" class="search-field" placeholder="Search &hellip;" value="" name="s" title="Search for:" />
				</label>
				<input type="submit" class="search-submit" value="Search" />
			</form></aside>		<aside id="recent-posts-2" class="widget widget_recent_entries">		<h3 class="widget-title">Recent Posts</h3>		<ul>
					<li>
				<a href="http://a-laughlin.com/?p=652" title="Migration in progress">Migration in progress</a>
						</li>
					<li>
				<a href="http://a-laughlin.com/?p=645" title="A Spine.js with Handlebars.js JavaScript Tutorial">A Spine.js with Handlebars.js JavaScript Tutorial</a>
						</li>
					<li>
				<a href="http://a-laughlin.com/?p=601" title="Fisheye Grids &#8211; A User Interface Design Pattern">Fisheye Grids &#8211; A User Interface Design Pattern</a>
						</li>
					<li>
				<a href="http://a-laughlin.com/?p=362" title="Visualizing Cambridge Chicago&#8217;s Data with jQuery and Google Maps + Charts + Refine + Fusion Tables">Visualizing Cambridge Chicago&#8217;s Data with jQuery and Google Maps + Charts + Refine + Fusion Tables</a>
						</li>
					<li>
				<a href="http://a-laughlin.com/?p=512" title="Staging Server &#8211; Fast and Free">Staging Server &#8211; Fast and Free</a>
						</li>
				</ul>
		</aside><aside id="recent-comments-2" class="widget widget_recent_comments"><h3 class="widget-title">Recent Comments</h3><ul id="recentcomments"><li class="recentcomments"><a href='http://fxonlinetradinginfo.com/47/fx-technical-analysis-trading-with-charts-and-trends/' rel='external nofollow' class='url'>Fx Technical Analysis: Trading With Charts And Trends</a> on <a href="http://a-laughlin.com/?p=362#comment-5">Visualizing Cambridge Chicago&#8217;s Data with jQuery and Google Maps + Charts + Refine + Fusion Tables</a></li></ul></aside><aside id="archives-2" class="widget widget_archive"><h3 class="widget-title">Archives</h3>		<ul>
			<li><a href='http://a-laughlin.com/?m=201311' title='November 2013'>November 2013</a></li>
	<li><a href='http://a-laughlin.com/?m=201202' title='February 2012'>February 2012</a></li>
	<li><a href='http://a-laughlin.com/?m=201112' title='December 2011'>December 2011</a></li>
	<li><a href='http://a-laughlin.com/?m=201111' title='November 2011'>November 2011</a></li>
	<li><a href='http://a-laughlin.com/?m=201110' title='October 2011'>October 2011</a></li>
		</ul>
</aside><aside id="categories-2" class="widget widget_categories"><h3 class="widget-title">Categories</h3>		<ul>
	<li class="cat-item cat-item-2"><a href="http://a-laughlin.com/?cat=2" title="View all posts filed under JavaScript">JavaScript</a>
</li>
	<li class="cat-item cat-item-1"><a href="http://a-laughlin.com/?cat=1" title="View all posts filed under Uncategorized">Uncategorized</a>
</li>
	<li class="cat-item cat-item-6"><a href="http://a-laughlin.com/?cat=6" title="View all posts filed under Visualization">Visualization</a>
</li>
		</ul>
</aside><aside id="meta-2" class="widget widget_meta"><h3 class="widget-title">Meta</h3>			<ul>
			<li><a href="http://a-laughlin.com/wp-admin/">Site Admin</a></li>			<li><a href="http://a-laughlin.com/wp-login.php?action=logout&#038;_wpnonce=43a6a5d5f0">Log out</a></li>
			<li><a href="http://a-laughlin.com/?feed=rss2" title="Syndicate this site using RSS 2.0">Entries <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="http://a-laughlin.com/?feed=comments-rss2" title="The latest comments to all posts in RSS">Comments <abbr title="Really Simple Syndication">RSS</abbr></a></li>
			<li><a href="http://wordpress.org/" title="Powered by WordPress, state-of-the-art semantic personal publishing platform.">WordPress.org</a></li>						</ul>
</aside>		</div><!-- .widget-area -->
	</div><!-- #secondary -->

			<div class="site-info">
								<span id="copyright">&copy; Adam Laughlin</span>
			</div><!-- .site-info -->
		</footer><!-- #colophon -->
	</div><!-- #page -->

	<script type='text/javascript' src='http://a-laughlin.com/wp-includes/js/admin-bar.min.js?ver=3.6'></script>
<script type='text/javascript' src='http://a-laughlin.com/wp-includes/js/jquery/jquery.masonry.min.js?ver=2.1.05'></script>
<script type='text/javascript' src='http://a-laughlin.com/wp-content/themes/adam-custom/js/functions.js?ver=2013-07-18'></script>
	<script type="text/javascript">
		(function() {
			var request, b = document.body, c = 'className', cs = 'customize-support', rcs = new RegExp('(^|\\s+)(no-)?'+cs+'(\\s+|$)');

			request = true;

			b[c] = b[c].replace( rcs, ' ' );
			b[c] += ( window.postMessage && request ? ' ' : ' no-' ) + cs;
		}());
	</script>
			<div id="wpadminbar" class="nojq nojs" role="navigation">
			<a class="screen-reader-shortcut" href="#wp-toolbar" tabindex="1">Skip to toolbar</a>
			<div class="quicklinks" id="wp-toolbar" role="navigation" aria-label="Top navigation toolbar." tabindex="0">
				<ul id="wp-admin-bar-root-default" class="ab-top-menu">
		<li id="wp-admin-bar-wp-logo" class="menupop"><a class="ab-item"  aria-haspopup="true" href="http://a-laughlin.com/wp-admin/about.php" title="About WordPress"><span class="ab-icon"></span></a><div class="ab-sub-wrapper"><ul id="wp-admin-bar-wp-logo-default" class="ab-submenu">
		<li id="wp-admin-bar-about"><a class="ab-item"  href="http://a-laughlin.com/wp-admin/about.php">About WordPress</a>		</li></ul><ul id="wp-admin-bar-wp-logo-external" class="ab-sub-secondary ab-submenu">
		<li id="wp-admin-bar-wporg"><a class="ab-item"  href="http://wordpress.org/">WordPress.org</a>		</li>
		<li id="wp-admin-bar-documentation"><a class="ab-item"  href="http://codex.wordpress.org/">Documentation</a>		</li>
		<li id="wp-admin-bar-support-forums"><a class="ab-item"  href="http://wordpress.org/support/">Support Forums</a>		</li>
		<li id="wp-admin-bar-feedback"><a class="ab-item"  href="http://wordpress.org/support/forum/requests-and-feedback">Feedback</a>		</li></ul></div>		</li>
		<li id="wp-admin-bar-site-name" class="menupop"><a class="ab-item"  aria-haspopup="true" href="http://a-laughlin.com/wp-admin/">My blog</a><div class="ab-sub-wrapper"><ul id="wp-admin-bar-site-name-default" class="ab-submenu">
		<li id="wp-admin-bar-dashboard"><a class="ab-item"  href="http://a-laughlin.com/wp-admin/">Dashboard</a>		</li></ul><ul id="wp-admin-bar-appearance" class="ab-submenu">
		<li id="wp-admin-bar-themes"><a class="ab-item"  href="http://a-laughlin.com/wp-admin/themes.php">Themes</a>		</li>
		<li id="wp-admin-bar-customize" class="hide-if-no-customize"><a class="ab-item"  href="http://a-laughlin.com/wp-admin/customize.php?url=http%3A%2F%2Fa-laughlin.com%2F">Customize</a>		</li>
		<li id="wp-admin-bar-widgets"><a class="ab-item"  href="http://a-laughlin.com/wp-admin/widgets.php">Widgets</a>		</li>
		<li id="wp-admin-bar-menus"><a class="ab-item"  href="http://a-laughlin.com/wp-admin/nav-menus.php">Menus</a>		</li>
		<li id="wp-admin-bar-header"><a class="ab-item"  href="http://a-laughlin.com/wp-admin/themes.php?page=custom-header">Header</a>		</li></ul></div>		</li>
		<li id="wp-admin-bar-updates"><a class="ab-item"  href="http://a-laughlin.com/wp-admin/update-core.php" title="1 Plugin Update, 1 Theme Update"><span class="ab-icon"></span><span class="ab-label">2</span><span class="screen-reader-text">1 Plugin Update, 1 Theme Update</span></a>		</li>
		<li id="wp-admin-bar-comments"><a class="ab-item"  href="http://a-laughlin.com/wp-admin/edit-comments.php" title="4 comments awaiting moderation"><span class="ab-icon"></span><span id="ab-awaiting-mod" class="ab-label awaiting-mod pending-count count-4">4</span></a>		</li>
		<li id="wp-admin-bar-new-content" class="menupop"><a class="ab-item"  aria-haspopup="true" href="http://a-laughlin.com/wp-admin/post-new.php" title="Add New"><span class="ab-icon"></span><span class="ab-label">New</span></a><div class="ab-sub-wrapper"><ul id="wp-admin-bar-new-content-default" class="ab-submenu">
		<li id="wp-admin-bar-new-post"><a class="ab-item"  href="http://a-laughlin.com/wp-admin/post-new.php">Post</a>		</li>
		<li id="wp-admin-bar-new-media"><a class="ab-item"  href="http://a-laughlin.com/wp-admin/media-new.php">Media</a>		</li>
		<li id="wp-admin-bar-new-page"><a class="ab-item"  href="http://a-laughlin.com/wp-admin/post-new.php?post_type=page">Page</a>		</li>
		<li id="wp-admin-bar-new-user"><a class="ab-item"  href="http://a-laughlin.com/wp-admin/user-new.php">User</a>		</li></ul></div>		</li></ul><ul id="wp-admin-bar-top-secondary" class="ab-top-secondary ab-top-menu">
		<li id="wp-admin-bar-search" class="admin-bar-search"><div class="ab-item ab-empty-item" tabindex="-1"><form action="http://a-laughlin.com/" method="get" id="adminbarsearch"><input class="adminbar-input" name="s" id="adminbar-search" type="text" value="" maxlength="150" /><input type="submit" class="adminbar-button" value="Search"/></form></div>		</li>
		<li id="wp-admin-bar-my-account" class="menupop with-avatar"><a class="ab-item"  aria-haspopup="true" href="http://a-laughlin.com/wp-admin/profile.php" title="My Account">Howdy, Adam Laughlin<img alt='' src='http://0.gravatar.com/avatar/2011b1a59bd294634c86da82620311da?s=16&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D16&amp;r=G' class='avatar avatar-16 photo' height='16' width='16' /></a><div class="ab-sub-wrapper"><ul id="wp-admin-bar-user-actions" class="ab-submenu">
		<li id="wp-admin-bar-user-info"><a class="ab-item" tabindex="-1" href="http://a-laughlin.com/wp-admin/profile.php"><img alt='' src='http://0.gravatar.com/avatar/2011b1a59bd294634c86da82620311da?s=64&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D64&amp;r=G' class='avatar avatar-64 photo' height='64' width='64' /><span class='display-name'>Adam Laughlin</span><span class='username'>adam</span></a>		</li>
		<li id="wp-admin-bar-edit-profile"><a class="ab-item"  href="http://a-laughlin.com/wp-admin/profile.php">Edit My Profile</a>		</li>
		<li id="wp-admin-bar-logout"><a class="ab-item"  href="http://a-laughlin.com/wp-login.php?action=logout&#038;_wpnonce=43a6a5d5f0">Log Out</a>		</li></ul></div>		</li></ul>			</div>
						<a class="screen-reader-shortcut" href="http://a-laughlin.com/wp-login.php?action=logout&#038;_wpnonce=43a6a5d5f0">Log Out</a>
					</div>

		<div id="boat"></div>
<div id="island"></div>
<div id="boulders"></div>
<div id="pads"></div>
</body>
</html>